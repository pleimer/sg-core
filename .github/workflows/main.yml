name: CI
env:
  COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
on: push

jobs:
  golangci:
    name: Linting
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.33

  test-framework:
    name: Base testing
    runs-on: ubuntu-20.04

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: '1.14'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run unit tests and code coverage
        run: go test -v -coverprofile=profile.cov ./...
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
      - uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })
      # - name: Comment on PR with coveralls badge
      #   uses: actions/github-script@v1
      #   with:
      #     script: |
      #       github.pulls.get({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: context.payload.issue.number
      #       }).then( (pr) => {
      #         var BRANCH = pr.data.head.ref
      #         var OWNER = context.repo.owner

      #         github.issues.createComment({
      #           issue_number: context.issue.number,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           body: `[![Coverage Status](https://coveralls.io/repos/github/${OWNER}/sg-core/badge.svg?branch=${BRANCH})](https://coveralls.io/github/${OWNER}/sg-core?branch=${BRANCH})`
      #         })
      #       })
      - name: Verify image builds
        run: |
          docker build --tag infrawatch/sg-core:latest --file build/Dockerfile .

      - name: List images
        run: |
          docker images
